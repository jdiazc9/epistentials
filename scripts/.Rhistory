df2 <- read.csv('../data_sets/butyrate_Clark2021.csv')
nrow(unique(df2[, 1:25]))
counts <- table(do.call(paste, df2[, 1:25]))
hist(counts, breaks = 20)
head(as.data.frame(sort(counts, decreasing = TRUE)))
fraction_high <- sum(df2$function. > 30) / nrow(df2)
fraction_high
df2_rowAvgs <- aggregate(function. ~ .,
data = df2,
FUN = mean)
fraction_high <- sum(df2_rowAvgs$function. > 30) / nrow(df2_rowAvgs)
fraction_high
df_rep1 <- df[, 1:9]
colnames(df_rep1)[9] <- 'fun'
delta_Fs <- structureData(df_rep1)
head(delta_Fs)
delta_Fs <- structureData(df)
head(delta_Fs)
ggplot(delta_Fs, aes(x = delta_fun.mean)) +
geom_histogram(bins = 20) +
facet_wrap(~focal_element) +
geom_vline(xintercept = 0,
color = 'gray')
plotFEEs(df)
plotFEEs(df, mode = 'plusone')
plotFEEs(df, mode = 'plusone', reg_type = 'tls')
plotFEEs(df)
regression_coefs <- getFEEs(df)
regression_coefs
df3 <- read.csv('../data_sets/pseudomonas-abs600-dilFactor0.025_Diaz-Colunga2024.csv')
head(df3)
inter_coeffs <- getInterCoefficients(df3)
head(inter_coeffs)
ggplot(inter_coeffs, aes(x = order,
y = value.mean,
ymin = value.mean - value.sd,
ymax = value.mean + value.sd,
group = index)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0,
position = position_dodge(width = 0.5),
alpha = 0.25)
df3_rep1 <- cbind(df3[, 1:8], fun = df3$absorbance.rep1)
noisy_F <- df3_rep1$fun + rnorm(nrow(df3_rep1),
mean = 0,
sd = sd(df3_rep1$fun)/10)
df3_noisy <- cbind(df3_rep1[, 1:8], fun = noisy_F)
original_coeffs <- getInterCoefficients(df3_rep1)
noisy_coeffs <- getInterCoefficients(df3_noisy)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_point()
print(coef_plot)
coef_plot <- coef_plot + facet_wrap(~ order,
scales = 'free')
print(coef_plot)
coef_plot <- coef_plot +
facet_wrap(~ order,
scales = 'free') +
geom_abline(slope = 1,
intercept = 0,
color = 'gray')
print(coef_plot)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_point() +
coord_equal()
print(coef_plot)
require(tidymodels)
install.packages('tidymodels')
install.packages('tidymodels')
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
require(testthat)
require(ggplot2)
require(tidyr)
require(gtools)
require(tidymodels)
source('basic_functions.R')
df <- read.csv('../data_sets/pyoverdine-training_Diaz-Colunga2024.csv')
head(df)
nrow(unique(df[, 1:8]))
nrow(df)
df2 <- read.csv('../data_sets/butyrate_Clark2021.csv')
nrow(unique(df2[, 1:25]))
counts <- table(do.call(paste, df2[, 1:25]))
hist(counts, breaks = 20)
head(as.data.frame(sort(counts, decreasing = TRUE)))
fraction_high <- sum(df2$function. > 30) / nrow(df2)
fraction_high
df2_rowAvgs <- aggregate(function. ~ .,
data = df2,
FUN = mean)
fraction_high <- sum(df2_rowAvgs$function. > 30) / nrow(df2_rowAvgs)
fraction_high
df_rep1 <- df[, 1:9]
colnames(df_rep1)[9] <- 'fun'
delta_Fs <- structureData(df_rep1)
head(delta_Fs)
delta_Fs <- structureData(df)
head(delta_Fs)
ggplot(delta_Fs, aes(x = delta_fun.mean)) +
geom_histogram(bins = 20) +
facet_wrap(~focal_element) +
geom_vline(xintercept = 0,
color = 'gray')
plotFEEs(df)
plotFEEs(df, mode = 'plusone')
plotFEEs(df, mode = 'plusone', reg_type = 'tls')
plotFEEs(df)
regression_coefs <- getFEEs(df)
regression_coefs
df3 <- read.csv('../data_sets/pseudomonas-abs600-dilFactor0.025_Diaz-Colunga2024.csv')
head(df3)
inter_coeffs <- getInterCoefficients(df3)
head(inter_coeffs)
ggplot(inter_coeffs, aes(x = order,
y = value.mean,
ymin = value.mean - value.sd,
ymax = value.mean + value.sd,
group = index)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0,
position = position_dodge(width = 0.5),
alpha = 0.25)
df3_rep1 <- cbind(df3[, 1:8], fun = df3$absorbance.rep1)
noisy_F <- df3_rep1$fun + rnorm(nrow(df3_rep1),
mean = 0,
sd = sd(df3_rep1$fun)/10)
df3_noisy <- cbind(df3_rep1[, 1:8], fun = noisy_F)
original_coeffs <- getInterCoefficients(df3_rep1)
noisy_coeffs <- getInterCoefficients(df3_noisy)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_point() +
coord_equal()
print(coef_plot)
coef_plot <- coef_plot +
facet_wrap(~ order,
scales = 'free') +
geom_abline(slope = 1,
intercept = 0,
color = 'gray')
print(coef_plot)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_point() +
coord_obs_pred()
library(tidymodels)
install.packages('rlang')
install.packages("rlang")
install.packages('rlang')
install.packages("rlang")
library(tidymodels)
library(rlang)
version(rlang)
rlang.version
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_point() +
coord_obs_pred()
require(testthat)
require(ggplot2)
require(tidyr)
require(gtools)
require(tidymodels)
source('basic_functions.R')
df <- read.csv('../data_sets/pyoverdine-training_Diaz-Colunga2024.csv')
head(df)
nrow(unique(df[, 1:8]))
nrow(df)
df2 <- read.csv('../data_sets/butyrate_Clark2021.csv')
nrow(unique(df2[, 1:25]))
counts <- table(do.call(paste, df2[, 1:25]))
hist(counts, breaks = 20)
head(as.data.frame(sort(counts, decreasing = TRUE)))
fraction_high <- sum(df2$function. > 30) / nrow(df2)
fraction_high
df2_rowAvgs <- aggregate(function. ~ .,
data = df2,
FUN = mean)
fraction_high <- sum(df2_rowAvgs$function. > 30) / nrow(df2_rowAvgs)
fraction_high
df_rep1 <- df[, 1:9]
colnames(df_rep1)[9] <- 'fun'
delta_Fs <- structureData(df_rep1)
head(delta_Fs)
delta_Fs <- structureData(df)
head(delta_Fs)
ggplot(delta_Fs, aes(x = delta_fun.mean)) +
geom_histogram(bins = 20) +
facet_wrap(~focal_element) +
geom_vline(xintercept = 0,
color = 'gray')
plotFEEs(df)
plotFEEs(df, mode = 'plusone')
plotFEEs(df, mode = 'plusone', reg_type = 'tls')
plotFEEs(df)
regression_coefs <- getFEEs(df)
regression_coefs
df3 <- read.csv('../data_sets/pseudomonas-abs600-dilFactor0.025_Diaz-Colunga2024.csv')
head(df3)
inter_coeffs <- getInterCoefficients(df3)
head(inter_coeffs)
ggplot(inter_coeffs, aes(x = order,
y = value.mean,
ymin = value.mean - value.sd,
ymax = value.mean + value.sd,
group = index)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0,
position = position_dodge(width = 0.5),
alpha = 0.25)
df3_rep1 <- cbind(df3[, 1:8], fun = df3$absorbance.rep1)
noisy_F <- df3_rep1$fun + rnorm(nrow(df3_rep1),
mean = 0,
sd = sd(df3_rep1$fun)/10)
df3_noisy <- cbind(df3_rep1[, 1:8], fun = noisy_F)
original_coeffs <- getInterCoefficients(df3_rep1)
noisy_coeffs <- getInterCoefficients(df3_noisy)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_point() +
coord_obs_pred()
install.packages("rlang")
install.packages("rlang")
require(testthat)
require(ggplot2)
require(tidyr)
require(gtools)
require(tidymodels)
source('basic_functions.R')
df <- read.csv('../data_sets/pyoverdine-training_Diaz-Colunga2024.csv')
head(df)
nrow(unique(df[, 1:8]))
nrow(df)
df2 <- read.csv('../data_sets/butyrate_Clark2021.csv')
nrow(unique(df2[, 1:25]))
counts <- table(do.call(paste, df2[, 1:25]))
hist(counts, breaks = 20)
head(as.data.frame(sort(counts, decreasing = TRUE)))
fraction_high <- sum(df2$function. > 30) / nrow(df2)
fraction_high
df2_rowAvgs <- aggregate(function. ~ .,
data = df2,
FUN = mean)
fraction_high <- sum(df2_rowAvgs$function. > 30) / nrow(df2_rowAvgs)
fraction_high
df_rep1 <- df[, 1:9]
colnames(df_rep1)[9] <- 'fun'
delta_Fs <- structureData(df_rep1)
head(delta_Fs)
delta_Fs <- structureData(df)
head(delta_Fs)
ggplot(delta_Fs, aes(x = delta_fun.mean)) +
geom_histogram(bins = 20) +
facet_wrap(~focal_element) +
geom_vline(xintercept = 0,
color = 'gray')
plotFEEs(df)
plotFEEs(df, mode = 'plusone')
plotFEEs(df, mode = 'plusone', reg_type = 'tls')
plotFEEs(df)
regression_coefs <- getFEEs(df)
regression_coefs
df3 <- read.csv('../data_sets/pseudomonas-abs600-dilFactor0.025_Diaz-Colunga2024.csv')
head(df3)
inter_coeffs <- getInterCoefficients(df3)
head(inter_coeffs)
ggplot(inter_coeffs, aes(x = order,
y = value.mean,
ymin = value.mean - value.sd,
ymax = value.mean + value.sd,
group = index)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0,
position = position_dodge(width = 0.5),
alpha = 0.25)
df3_rep1 <- cbind(df3[, 1:8], fun = df3$absorbance.rep1)
noisy_F <- df3_rep1$fun + rnorm(nrow(df3_rep1),
mean = 0,
sd = sd(df3_rep1$fun)/10)
df3_noisy <- cbind(df3_rep1[, 1:8], fun = noisy_F)
original_coeffs <- getInterCoefficients(df3_rep1)
noisy_coeffs <- getInterCoefficients(df3_noisy)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_point() +
coord_obs_pred()
install.packages("rlang")
install.packages("rlang")
require(testthat)
require(ggplot2)
require(tidyr)
require(gtools)
source('basic_functions.R')
df <- read.csv('../data_sets/pyoverdine-training_Diaz-Colunga2024.csv')
head(df)
nrow(unique(df[, 1:8]))
nrow(df)
df2 <- read.csv('../data_sets/butyrate_Clark2021.csv')
nrow(unique(df2[, 1:25]))
counts <- table(do.call(paste, df2[, 1:25]))
hist(counts, breaks = 20)
head(as.data.frame(sort(counts, decreasing = TRUE)))
fraction_high <- sum(df2$function. > 30) / nrow(df2)
fraction_high
df2_rowAvgs <- aggregate(function. ~ .,
data = df2,
FUN = mean)
fraction_high <- sum(df2_rowAvgs$function. > 30) / nrow(df2_rowAvgs)
fraction_high
df_rep1 <- df[, 1:9]
colnames(df_rep1)[9] <- 'fun'
delta_Fs <- structureData(df_rep1)
head(delta_Fs)
delta_Fs <- structureData(df)
head(delta_Fs)
ggplot(delta_Fs, aes(x = delta_fun.mean)) +
geom_histogram(bins = 20) +
facet_wrap(~focal_element) +
geom_vline(xintercept = 0,
color = 'gray')
plotFEEs(df)
plotFEEs(df, mode = 'plusone')
plotFEEs(df, mode = 'plusone', reg_type = 'tls')
plotFEEs(df)
regression_coefs <- getFEEs(df)
regression_coefs
df3 <- read.csv('../data_sets/pseudomonas-abs600-dilFactor0.025_Diaz-Colunga2024.csv')
head(df3)
inter_coeffs <- getInterCoefficients(df3)
head(inter_coeffs)
ggplot(inter_coeffs, aes(x = order,
y = value.mean,
ymin = value.mean - value.sd,
ymax = value.mean + value.sd,
group = index)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0,
position = position_dodge(width = 0.5),
alpha = 0.25)
df3_rep1 <- cbind(df3[, 1:8], fun = df3$absorbance.rep1)
noisy_F <- df3_rep1$fun + rnorm(nrow(df3_rep1),
mean = 0,
sd = sd(df3_rep1$fun)/10)
df3_noisy <- cbind(df3_rep1[, 1:8], fun = noisy_F)
original_coeffs <- getInterCoefficients(df3_rep1)
noisy_coeffs <- getInterCoefficients(df3_noisy)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_abline(slope = 1,
intercept = 0,
color = 'gray') +
geom_point()
print(coef_plot)
coef_plot <- coef_plot +
facet_wrap(~ order,
scales = 'free')
print(coef_plot)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_abline(slope = 1,
intercept = 0,
color = 'gray') +
geom_point() +
coord_fixed()
print(coef_plot)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_abline(slope = 1,
intercept = 0,
color = 'gray') +
geom_point() +
geom_blank(aes(y = value.mean.original, x = value.mean.noisy)) # this is just a little hack for equal x and y axis scales
print(coef_plot)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_abline(slope = 1,
intercept = 0,
color = 'gray') +
geom_point() +
geom_blank(aes(y = value.mean.original, x = value.mean.noisy)) + # this is just a little hack for equal x and y axis scales
coord_fixed()
print(coef_plot)
coef_plot <- coef_plot +
facet_wrap(~ order,
scales = 'free')
print(coef_plot)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_abline(slope = 1,
intercept = 0,
color = 'gray') +
geom_point() +
geom_blank(aes(y = value.mean.original, x = value.mean.noisy)) + # this is just a little hack for equal x and y axis scales
theme(aspect.ratio = 1)
print(coef_plot)
coef_plot <- coef_plot +
facet_wrap(~ order,
scales = 'free')
print(coef_plot)
require(testthat)
require(ggplot2)
require(tidyr)
require(gtools)
source('basic_functions.R')
df <- read.csv('../data_sets/pyoverdine-training_Diaz-Colunga2024.csv')
head(df)
nrow(unique(df[, 1:8]))
nrow(df)
df2 <- read.csv('../data_sets/butyrate_Clark2021.csv')
nrow(unique(df2[, 1:25]))
counts <- table(do.call(paste, df2[, 1:25]))
hist(counts, breaks = 20)
head(as.data.frame(sort(counts, decreasing = TRUE)))
fraction_high <- sum(df2$function. > 30) / nrow(df2)
fraction_high
df2_rowAvgs <- aggregate(function. ~ .,
data = df2,
FUN = mean)
fraction_high <- sum(df2_rowAvgs$function. > 30) / nrow(df2_rowAvgs)
fraction_high
df_rep1 <- df[, 1:9]
colnames(df_rep1)[9] <- 'fun'
delta_Fs <- structureData(df_rep1)
head(delta_Fs)
delta_Fs <- structureData(df)
head(delta_Fs)
ggplot(delta_Fs, aes(x = delta_fun.mean)) +
geom_histogram(bins = 20) +
facet_wrap(~focal_element) +
geom_vline(xintercept = 0,
color = 'gray')
plotFEEs(df)
plotFEEs(df, mode = 'plusone')
plotFEEs(df, mode = 'plusone', reg_type = 'tls')
plotFEEs(df)
regression_coefs <- getFEEs(df)
regression_coefs
df3 <- read.csv('../data_sets/pseudomonas-abs600-dilFactor0.025_Diaz-Colunga2024.csv')
head(df3)
inter_coeffs <- getInterCoefficients(df3)
head(inter_coeffs)
ggplot(inter_coeffs, aes(x = order,
y = value.mean,
ymin = value.mean - value.sd,
ymax = value.mean + value.sd,
group = index)) +
geom_hline(yintercept = 0,
color = 'gray') +
geom_point(position = position_dodge(width = 0.5)) +
geom_errorbar(width = 0,
position = position_dodge(width = 0.5),
alpha = 0.25)
df3_rep1 <- cbind(df3[, 1:8], fun = df3$absorbance.rep1)
noisy_F <- df3_rep1$fun + rnorm(nrow(df3_rep1),
mean = 0,
sd = sd(df3_rep1$fun)/5)
df3_noisy <- cbind(df3_rep1[, 1:8], fun = noisy_F)
original_coeffs <- getInterCoefficients(df3_rep1)
noisy_coeffs <- getInterCoefficients(df3_noisy)
coef_plot <- ggplot(merge(original_coeffs, noisy_coeffs,
by = c('order', 'index'),
suffixes = c('.original', '.noisy')),
aes(x = value.mean.original, y = value.mean.noisy)) +
geom_abline(slope = 1,
intercept = 0,
color = 'gray') +
geom_point() +
geom_blank(aes(y = value.mean.original, x = value.mean.noisy)) + # this is just a little hack for equal x and y axis scales
theme(aspect.ratio = 1)
print(coef_plot)
coef_plot <- coef_plot +
facet_wrap(~ order,
scales = 'free')
print(coef_plot)
